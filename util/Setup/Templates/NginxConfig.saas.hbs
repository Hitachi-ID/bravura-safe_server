#######################################################################
# WARNING: This file is generated. Do not make changes to this file.  #
# They will be overwritten on update. You can manage various settings #
# used in this file from the ./bwdata/config.yml file for your        #
# installation.                                                       #
#######################################################################

server {
  listen 8080;
  server_name _;
  return 301 https://$host$request_uri;
}

server {
  listen 8443 ssl http2;

  ssl_certificate /etc/ssl/certificate.crt;
  ssl_certificate_key /etc/ssl/private.key;
  ssl_session_timeout 30m;
  ssl_session_cache shared:SSL:20m;
  ssl_session_tickets off;

  ssl_protocols TLSv1.2;
  ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
  # Enables server-side protection from BEAST attacks
  ssl_prefer_server_ciphers on;

  # OCSP Stapling ---
  # Fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;

  # Verify chain of trust of OCSP response using Root CA and Intermediate certs
#  ssl_trusted_certificate /etc/ssl/ca.crt;
  resolver 1.1.1.1 1.0.0.1 9.9.9.9 149.112.112.112 valid=300s;

  set_real_ip_from 10.54.10.0/23; # cc1a
  set_real_ip_from 10.54.12.0/23; # cc1b
  set_real_ip_from 10.54.14.0/23; # cc1d
  real_ip_header X-Forwarded-For;

  include /etc/nginx/security-headers-ssl.conf;
  include /etc/nginx/security-headers.conf;

  location / {
    proxy_pass http://localhost:5009/;
    include /etc/nginx/security-headers-ssl.conf;
    include /etc/nginx/security-headers.conf;
    add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://haveibeenpwned.com; child-src 'self' https://*.duosecurity.com https://*.duofederal.com; form-action 'self'; frame-ancestors 'self'; frame-src 'self' https://*.duosecurity.com https://*.duofederal.com; connect-src 'self' wss://*.test.hitachi-id.net https://api.pwnedpasswords.com https://api.2fa.directory; object-src 'self' blob:;";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Robots-Tag "noindex, nofollow";

    # Matches the Angular root index.html
    location = / {
      proxy_pass http://web:5000/;

      # Add headers from parent (any add_header in nested blocks clears inherited headers)
      include /etc/nginx/security-headers-ssl.conf;
      include /etc/nginx/security-headers.conf;
      add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://haveibeenpwned.com; child-src 'self' https://*.duosecurity.com https://*.duofederal.com; form-action 'self'; frame-ancestors 'self'; frame-src 'self' https://*.duosecurity.com https://*.duofederal.com; connect-src 'self' wss://*.test.hitachi-id.net https://api.pwnedpasswords.com https://api.2fa.directory; object-src 'self' blob:;";
      add_header X-Frame-Options SAMEORIGIN;
      add_header X-Robots-Tag "noindex, nofollow";

      # Set a predictable cache length for the Angular root to streamline pushing updates.
      add_header Cache-Control max-age=1800;
    }

    # Matches static resources containing cache busting hash.
    # Note: nginx regular expressions do not support {20}, so a more flexible
    # hash match ([a-f0-9]+) is used here instead of something matching only
    # 20 character hashes like f02bc57b934321649d87.
    location ~* ^(.+\.[a-f0-9]+\.(css|eot|gif|ico|jpe?g|js|otf|png|svg|ttf|woff|woff2?))$ {
      proxy_pass http://web:5000/$1;

      # Add headers from parent (any add_header in nested blocks clears inherited headers)
      include /etc/nginx/security-headers-ssl.conf;
      include /etc/nginx/security-headers.conf;
      add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://haveibeenpwned.com; child-src 'self' https://*.duosecurity.com https://*.duofederal.com; form-action 'self'; frame-ancestors 'self'; frame-src 'self' https://*.duosecurity.com https://*.duofederal.com; connect-src 'self' wss://*.test.hitachi-id.net https://api.pwnedpasswords.com https://api.2fa.directory; object-src 'self' blob:;";
      add_header X-Frame-Options SAMEORIGIN;
      add_header X-Robots-Tag "noindex, nofollow";

      # Cache hashed static resources for up to a year. Resources with hashes
      # in their file names don't need to check for updates because the hash
      # will be different whenever the file contents change.
      add_header Cache-Control max-age=31536000;
    }

    # Matches all other static resources
    location ~* ^(.+\.(css|eot|gif|ico|jpe?g|js|otf|png|svg|ttf|woff|woff2?))$ {
      proxy_pass http://web:5000/$1;

      # Add headers from parent (any add_header in nested blocks clears inherited headers)
      include /etc/nginx/security-headers-ssl.conf;
      include /etc/nginx/security-headers.conf;
      add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://haveibeenpwned.com; child-src 'self' https://*.duosecurity.com https://*.duofederal.com; form-action 'self'; frame-ancestors 'self'; frame-src 'self' https://*.duosecurity.com https://*.duofederal.com; connect-src 'self' wss://*.test.hitachi-id.net https://api.pwnedpasswords.com https://api.2fa.directory; object-src 'self' blob:;";
      add_header X-Frame-Options SAMEORIGIN;
      add_header X-Robots-Tag "noindex, nofollow";

      # Set a predictable short cache length for these non-cache-busted static
      # resources like fonts.
      add_header Cache-Control max-age=1800;
    }
  }

  location /alive {
    return 200 'alive';
    add_header Content-Type text/plain;
  }

  location = /app-id.json {
    proxy_pass http://localhost:5009/app-id.json;
    include /etc/nginx/security-headers-ssl.conf;
    include /etc/nginx/security-headers.conf;
    proxy_hide_header Content-Type;
    add_header Content-Type $fido_content_type;
  }

  location = /duo-connector.html {
    proxy_pass http://localhost:5009/duo-connector.html;
  }

  location = /u2f-connector.html {
    proxy_pass http://localhost:5009/u2f-connector.html;
  }

  location = /webauthn-connector.html {
    proxy_pass http://localhost:5009/webauthn-connector.html;
  }

  location = /webauthn-fallback-connector.html {
    proxy_pass http://localhost:5009/webauthn-fallback-connector.html;
  }

  location = /sso-connector.html {
    proxy_pass http://localhost:5009/sso-connector.html;
  }


  location /attachments/ {
    proxy_pass http://localhost:5002/;
  }

  location /api/ {
    proxy_pass http://localhost:5001/;
  }

  location /icons/ {
    proxy_pass http://localhost:5004/;
  }

  location /notifications/ {
    proxy_pass http://localhost:5007/;
  }

  location /notifications/hub {
    proxy_pass http://localhost:5007/hub;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }

  location /events/ {
    proxy_pass http://localhost:5003/;
  }

  location /sso {
    proxy_pass http://localhost:5008;
    include /etc/nginx/security-headers-ssl.conf;
    include /etc/nginx/security-headers.conf;
    add_header X-Frame-Options SAMEORIGIN;
  }

  location /identity {
    proxy_pass http://localhost:5005;
    include /etc/nginx/security-headers-ssl.conf;
    include /etc/nginx/security-headers.conf;
    add_header X-Frame-Options SAMEORIGIN;
  }

  location /admin {
    proxy_pass http://localhost:5000;
    include /etc/nginx/security-headers-ssl.conf;
    include /etc/nginx/security-headers.conf;
    add_header X-Frame-Options SAMEORIGIN;
  }

}

