@model OrganizationEditModel
@{
    ViewData["Title"] = "Team: " + Model.Organization.Name;
}

@section Scripts {
    <script>
        (() => {
            document.getElementById('teams-trial').addEventListener('click', () => {
                if (document.getElementById('@(nameof(Model.PlanType))').value !==
                    '@((byte)Bit.Core.Enums.PlanType.Free)') {
                    alert('Team is not on a free plan.');
                    return;
                }

                // Plan
                document.getElementById('@(nameof(Model.PlanType))').value =
                    '@((byte)Bit.Core.Enums.PlanType.TeamsAnnually)';
                document.getElementById('@(nameof(Model.Plan))').value = 'Teams (Trial)';
                document.getElementById('@(nameof(Model.Seats))').value = '10';
                document.getElementById('@(nameof(Model.MaxCollections))').value = '';
                document.getElementById('@(nameof(Model.MaxStorageGb))').value = '1';
                // Features
                document.getElementById('@(nameof(Model.UsePolicies))').checked = false;
                document.getElementById('@(nameof(Model.UseSso))').checked = false;
                document.getElementById('@(nameof(Model.UseGroups))').checked = true;
                document.getElementById('@(nameof(Model.UseDirectory))').checked = true;
                document.getElementById('@(nameof(Model.UseEvents))').checked = true;
                document.getElementById('@(nameof(Model.UsersGetPremium))').checked = true;
                document.getElementById('@(nameof(Model.UseCustomPermissions))').checked = false;                
                document.getElementById('@(nameof(Model.UseTotp))').checked = true;
                document.getElementById('@(nameof(Model.Use2fa))').checked = true;
                document.getElementById('@(nameof(Model.UseApi))').checked = true;
                document.getElementById('@(nameof(Model.SelfHost))').checked = false;
                document.getElementById('@(nameof(Model.UseResetPassword))').checked = false;
                document.getElementById('@(nameof(Model.UseScim))').checked = false;
                // Licensing
                document.getElementById('@(nameof(Model.LicenseKey))').value = '@Model.RandomLicenseKey';
                document.getElementById('@(nameof(Model.ExpirationDate))').value = '@Model.FourteenDayExpirationDate';
                document.getElementById('@(nameof(Model.SalesAssistedTrialStarted))').value = true;

            });

            document.getElementById('enterprise-trial').addEventListener('click', () => {
                if (document.getElementById('@(nameof(Model.PlanType))').value !==
                    '@((byte)Bit.Core.Enums.PlanType.Free)') {
                    alert('Team is not on a free plan.');
                    return;
                }

                // Plan
                document.getElementById('@(nameof(Model.PlanType))').value =
                    '@((byte)Bit.Core.Enums.PlanType.EnterpriseAnnually)';
                document.getElementById('@(nameof(Model.Plan))').value = 'Enterprise (Trial)';
                document.getElementById('@(nameof(Model.Seats))').value = '10';
                document.getElementById('@(nameof(Model.MaxCollections))').value = '';
                document.getElementById('@(nameof(Model.MaxStorageGb))').value = '1';
                // Features
                document.getElementById('@(nameof(Model.UsePolicies))').checked = true;
                document.getElementById('@(nameof(Model.UseSso))').checked = true;
                document.getElementById('@(nameof(Model.UseGroups))').checked = true;
                document.getElementById('@(nameof(Model.UseDirectory))').checked = true;
                document.getElementById('@(nameof(Model.UseEvents))').checked = true;
                document.getElementById('@(nameof(Model.UsersGetPremium))').checked = true;
                document.getElementById('@(nameof(Model.UseCustomPermissions))').checked = true;
                document.getElementById('@(nameof(Model.UseTotp))').checked = true;
                document.getElementById('@(nameof(Model.Use2fa))').checked = true;
                document.getElementById('@(nameof(Model.UseApi))').checked = true;
                document.getElementById('@(nameof(Model.SelfHost))').checked = true;
                document.getElementById('@(nameof(Model.UseResetPassword))').checked = true;
                document.getElementById('@(nameof(Model.UseScim))').checked = true;
                // Licensing
                document.getElementById('@(nameof(Model.LicenseKey))').value = '@Model.RandomLicenseKey';
                document.getElementById('@(nameof(Model.ExpirationDate))').value = '@Model.FourteenDayExpirationDate';
                document.getElementById('@(nameof(Model.SalesAssistedTrialStarted))').value = true;

            });

            document.getElementById('@(nameof(Model.PlanType))').addEventListener('change', () => {
                const selectEl = document.getElementById('@(nameof(Model.PlanType))');
                const selectText = selectEl.options[selectEl.selectedIndex].text;
                document.getElementById('@(nameof(Model.Plan))').value = selectText;
            });

            document.getElementById('gateway-customer-link').addEventListener('click', () => {
                const gateway = document.getElementById('@(nameof(Model.Gateway))');
                const customerId = document.getElementById('@(nameof(Model.GatewayCustomerId))');
                if (!gateway || gateway.value === '' || !customerId || customerId.value === '') {
                    return;
                }

                if (gateway.value === '@((byte)Bit.Core.Enums.GatewayType.Stripe)') {
                    window.open('https://dashboard.stripe.com/customers/' + customerId.value, '_blank');
                } else if (gateway.value === '@((byte)Bit.Core.Enums.GatewayType.Braintree)') {
                    window.open('https://www.braintreegateway.com/merchants/@(Model.BraintreeMerchantId)/'
                        + customerId.value, '_blank');
                }
            });

            document.getElementById('gateway-subscription-link').addEventListener('click', () => {
                const gateway = document.getElementById('@(nameof(Model.Gateway))');
                const subId = document.getElementById('@(nameof(Model.GatewaySubscriptionId))');
                if (!gateway || gateway.value === '' || !subId || subId.value === '') {
                    return;
                }

                if (gateway.value === '@((byte)Bit.Core.Enums.GatewayType.Stripe)') {
                    window.open('https://dashboard.stripe.com/subscriptions/' + subId.value, '_blank');
                } else if (gateway.value === '@((byte)Bit.Core.Enums.GatewayType.Braintree)') {
                    window.open('https://www.braintreegateway.com/merchants/@(Model.BraintreeMerchantId)/' +
                        'subscriptions/' + subId.value, '_blank');
                }
            });
        })();
    </script>
}

<div class="row">
    <a class="nav-link" asp-controller="Organizations" asp-action="Index">
        <i class="fa fa-fw fa-angle-double-left" aria-hidden="true"></i>
        Back to Teams
    </a>
</div>

<h1>Team <small>@Model.Organization.Name</small></h1>

<h2>Team Information</h2>
@await Html.PartialAsync("_ViewInformation", Model)
<div class="d-none">
    <h2>Billing Information</h2>
    @await Html.PartialAsync("_BillingInformation",
        new BillingInformationModel { BillingInfo = Model.BillingInfo, OrganizationId = Model.Organization.Id })
</div>
<form method="post" id="edit-form">
    <input asp-for="SalesAssistedTrialStarted" type="hidden">
    <h2>General</h2>
    <div class="row">
        <div class="col-sm">
            <div class="form-group">
                <label asp-for="Name"></label>
                <input type="text" class="form-control" asp-for="Name" required>
            </div>
        </div>
    </div>
    <div class="form-check mb-3">
        <input type="checkbox" class="form-check-input" asp-for="Enabled">
        <label class="form-check-label" asp-for="Enabled"></label>
    </div>
    <div class="d-none">
        <h2>Business Information</h2>
        <div class="row">
            <div class="col-sm">
                <div class="form-group">
                    <label asp-for="BusinessName"></label>
                    <input type="text" class="form-control" asp-for="BusinessName">
                </div>
            </div>
        </div>
        <h2>Plan</h2>
        <div class="row">
            <div class="col-sm">
                <div class="form-group">
                    <label asp-for="PlanType"></label>
                    <select class="form-control" asp-for="PlanType"
                        asp-items="Html.GetEnumSelectList<Bit.Core.Enums.PlanType>()"></select>
                </div>
            </div>
            <div class="col-sm">
                <div class="form-group">
                    <label asp-for="Plan"></label>
                    <input type="text" class="form-control" asp-for="Plan" required>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <div class="form-group">
                    <label asp-for="Seats"></label>
                    <input type="number" class="form-control" asp-for="Seats" min="1">
                </div>
            </div>
            <div class="col-sm">
                <div class="form-group">
                    <label asp-for="MaxCollections"></label>
                    <input type="number" class="form-control" asp-for="MaxCollections" min="1">
                </div>
            </div>
            <div class="col-sm">
                <div class="form-group">
                    <label asp-for="MaxStorageGb"></label>
                    <input type="number" class="form-control" asp-for="MaxStorageGb" min="1">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-4">
                <div class="form-group">
                    <label asp-for="MaxAutoscaleSeats"></label>
                    <input type="number" class="form-control" asp-for="MaxAutoscaleSeats" min="1">
                </div>
            </div>
        </div>
    </div>
    @if (Model.PlanType == Bit.Core.Enums.PlanType.BravuraEnterprise || Model.PlanType == Bit.Core.Enums.PlanType.BravuraTeams)
    {
        <h2>Features</h2>
        <div class="row mb-3">
        <div class="col-4">
        <div class="d-none">
            <h3>General</h3>
        </div>
        <div class="d-none">
            <div class="form-check mb-2">
                <input type="checkbox" class="form-check-input" asp-for="SelfHost">
                <label class="form-check-label" asp-for="SelfHost"></label>
            </div>
        </div>
        @if (Model.PlanType == Bit.Core.Enums.PlanType.BravuraEnterprise)
        {
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="Use2fa">
                <label class="form-check-label" asp-for="Use2fa"></label>
            </div>
        }
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UseApi">
                <label class="form-check-label" asp-for="UseApi"></label>
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UseGroups">
                <label class="form-check-label" asp-for="UseGroups"></label>
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UsePolicies">
                <label class="form-check-label" asp-for="UsePolicies"></label>
            </div>
        @if (Model.PlanType == Bit.Core.Enums.PlanType.BravuraEnterprise)
        {
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UseSso">
                <label class="form-check-label" asp-for="UseSso"></label>
            </div>
        }
            <div class="d-none">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UseKeyConnector">
                <label class="form-check-label" asp-for="UseKeyConnector"></label>
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UseScim">
                <label class="form-check-label" asp-for="UseScim"></label>
            </div>
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UseDirectory">
                <label class="form-check-label" asp-for="UseDirectory"></label>
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UseEvents">
                <label class="form-check-label" asp-for="UseEvents"></label>
            </div>
        @if (Model.PlanType == Bit.Core.Enums.PlanType.BravuraEnterprise)
        {
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UseResetPassword">
                <label class="form-check-label" asp-for="UseResetPassword"></label>
            </div>
        }
            <div class="d-none">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UseCustomPermissions">
                <label class="form-check-label" asp-for="UseCustomPermissions"></label>
            </div>
            </div>
        </div>

        <div class="d-none">
        <div class="col-4">
            <h3>Password Manager</h3>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UseTotp">
                <label class="form-check-label" asp-for="UseTotp"></label>
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UsersGetPremium">
                <label class="form-check-label" asp-for="UsersGetPremium"></label>
            </div>
        </div>
        <div class="col-4">
            <h3>Secrets Manager</h3>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="UseSecretsManager">
                <label class="form-check-label" asp-for="UseSecretsManager"></label>
            </div>
        </div>
        </div>
        </div>
    }
    <div class="d-none">
        <h2>Licensing</h2>
        <div class="row">
            <div class="col-sm">
                <div class="form-group">
                    <label asp-for="LicenseKey"></label>
                    <input type="text" class="form-control" asp-for="LicenseKey">
                </div>
            </div>
            <div class="col-sm">
                <div class="form-group">
                    <label asp-for="ExpirationDate"></label>
                    <input type="datetime-local" class="form-control" asp-for="ExpirationDate">
                </div>
            </div>
        </div>
        <h2>Billing</h2>
        <div class="row">
            <div class="col-sm">
                <div class="form-group">
                    <label asp-for="BillingEmail"></label>
                    <input type="email" class="form-control" asp-for="BillingEmail">
                </div>
            </div>
            <div class="col-sm">
                <div class="form-group">
                    <div class="form-group">
                        <label asp-for="Gateway"></label>
                        <select class="form-control" asp-for="Gateway"
                            asp-items="Html.GetEnumSelectList<Bit.Core.Enums.GatewayType>()">
                            <option value="">--</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <div class="form-group">
                    <label asp-for="GatewayCustomerId"></label>
                    <div class="input-group">
                        <input type="text" class="form-control" asp-for="GatewayCustomerId">
                        <div class="input-group-append">
                            <button class="btn btn-secondary" type="button" id="gateway-customer-link">
                                <i class="fa fa-external-link"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm">
                <div class="form-group">
                    <label asp-for="GatewaySubscriptionId"></label>
                    <div class="input-group">
                        <input type="text" class="form-control" asp-for="GatewaySubscriptionId">
                        <div class="input-group-append">
                            <button class="btn btn-secondary" type="button" id="gateway-subscription-link">
                                <i class="fa fa-external-link"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<div class="d-flex mt-4">
    <button type="submit" class="btn btn-primary" form="edit-form">Save</button>
    &nbsp;
    @if (Model.PlanType == Bit.Core.Enums.PlanType.BravuraEnterprise)
    {
        <button id="demoteModalButton" type="button" class="btn btn-danger" data-toggle="modal" data-target="#demoteModal"
            data-id="@Model.Organization.Id" data-type="team">
            <i class="fa fa-fw fa-solid fa-thumbs-down" aria-hidden="true"></i>
            Demote
        </button>
        <form asp-action="Demote" asp-route-id="@Model.Organization.Id" data-id="@Model.Organization.Id">
            <button class="btn btn-danger d-none" type="submit"></button>
        </form>
        @await Html.PartialAsync("_DemoteModal")
    }
    else
    {
        <button id="promoteModalButton" type="button" class="btn btn-danger" data-toggle="modal" data-target="#promoteModal"
            data-id="@Model.Organization.Id" data-type="team">
            <i class="fa fa-fw fa-solid fa-thumbs-up" aria-hidden="true"></i>
            Promote
        </button>
        <form asp-action="Promote" asp-route-id="@Model.Organization.Id" data-id="@Model.Organization.Id">
            <button class="btn btn-danger d-none" type="submit"></button>
        </form>
        @await Html.PartialAsync("_PromoteModal")
    }
    <div class="ml-auto d-flex">
        <div class="d-none">
            <button class="btn btn-secondary mr-2" type="button" id="teams-trial">
                Teams Trial
            </button>
            <button class="btn btn-secondary mr-2" type="button" id="enterprise-trial">
                Enterprise Trial
            </button>
        </div>
        <button id="deleteModalButton" type="button" class="btn btn-danger" data-toggle="modal" data-target="#deleteModal"
            data-id="@Model.Organization.Id" data-type="team">
            <i class="fa fa-fw fa-trash" aria-hidden="true"></i>
            Delete
        </button>
        <form asp-action="Delete" asp-route-id="@Model.Organization.Id" data-id="@Model.Organization.Id">
            <button class="btn btn-danger d-none" type="submit"></button>
        </form>
    </div>
</div>

@if(TempData["message"] != null) 
{
    <h2 id="toast" class="d-none" data-status="@TempData["status"]" data-message="@TempData["message"]"></h2>
}

@await Html.PartialAsync("_DeleteModal")
